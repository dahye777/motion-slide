@charset "utf-8";
@import 'reset.scss';
@import url('https://fonts.googleapis.com/css2?family=Crimson+Text&display=swap');

main {
    width: 100%;
    height: 100vh;
    position: relative;
    background-color: #333;

    section {
        article {
            width: 24vw;
            height: 60vh;
            position: fixed;
            top: 50%;
            left: 50%;
            margin-top: -25vh;
            margin-left: -12vw;
            z-index: 1;
            overflow: hidden;

            // transition: all 1s;            
            transition-property: width, height, transform, opacity,
                margin-left, margin-top, top, left;
            /* all을 사용하면 모든 css속성에 대해서 transition을 적용할 수 있지만
            이것을 성능상 부담을 초래합니다
            즉 , 필요한 요소 뿐아니라 불필요한 요소도 상태 변화가 있을때 마다 
            transition을 발생하게 되면서 성능저하가 일어날 수 있습니다
            특히, 크기, 위치등 자주 변하는 속성들인데 transition이 현재 필요하지 않지만
            all을 사용하면 자주 적용되면서 성능저하문제가 심각할 수 있습니다
            따라서 필요한 속성들에 대해서만 명시적으로 지정하는 것이 
            정교한 제어, 성능문제도 해결할 수 있습니다  */
            transition-duration: 0.5s;
            transition-delay: 0s;
            box-shadow: 10px 10px 20px rgba(0, 0, 0, 0.2);

            .txt {
                width: 100%;
                height: 40%;
                background-color: #222;
                padding: 20px;
                padding-top: 30px;
                position: absolute;
                top: 0;
                right: 0;
                transition: 0.5s;

                strong {
                    font: bold 14px/1 'arial';
                    color: #ddd;
                }

                p {
                    font: 14px/1.2 'arial';
                    color: #888;
                }

                i {
                    font-size: 20px;
                    color: #888;
                    position: absolute;
                    top: 40px;
                    right: 40px;
                }

                h2 {
                    font: 5vw/1 "crimson text";
                    color: #fff;
                    position: absolute;
                    bottom: -3vw;
                    left: 20px;
                    z-index: 2;
                    transition: 0.5s;
                    text-shadow: 5px 5px 3px rgba(0, 0, 0, 0.2);

                    &::before {
                        content: '';
                        position: absolute;
                        width: 0%;
                        height: 1px;
                        background-color: #fff;
                        top: -10px;
                        left: 0;
                        transition: width 1s 0.5s;
                    }
                }

                .desc {
                    width: 60%;
                    opacity: 0;
                    position: absolute;
                    top: 60%;
                    left: 5vw;
                    transition: 0.5s; //
                    font: 16px/1.3 "arial";
                    color: #888;
                }
            }

            .pic {
                width: 100%;
                height: 60%;
                background-color: #000;
                position: absolute;
                bottom: 0;
                left: 0;
                transition: 0.5s;

                img {
                    width: 100%;
                    height: 100%;
                    object-fit: cover;
                    opacity: 0.5;
                    transition: opacity 0.5s;
                }
            }




            .open {
                width: 0%;
                height: 60px;
                background-color: #fff;
                position: absolute;
                bottom: 0px;
                left: 0px;
                overflow: hidden;
                display: flex;
                justify-content: space-between;
                align-items: center;
                cursor: pointer;
                transition: 0.5s;

                span {
                    font: 16px/1 "crimson text";
                    color: #000;
                    transform: translateX(-200px);
                    opacity: 0;
                    transition: 0.5s;
                }

                i {
                    margin-right: -100px;
                    opacity: 0;
                    color: #555;
                    transition: 0.5s;
                }
            }

            .close {
                cursor: pointer;
                position: absolute;
                top: 10vh;
                right: -10vw;
                color: #ddd;
                opacity: 0;
                transition: all 0.5s;
            }

            /*
            nth-of-type 방식 vs data-index방식
            data-index는 개발자의 의도와 개입이 자유로운 반면, nth-of-type방식은
            이미정해져있는 index에서 순환하기 때문에 순서에 개입이 어렵습니다
            또한 data-index는 정확한 li의 스타일을 고정할수 있습니다
            */

            &:nth-of-type(1) {
                transform: translateX(-400%) translateY(200%);
                opacity: 0;
            }

            &:nth-of-type(2) {
                transform: translateX(-130%) translateY(40%);
                opacity: 0.8;
            }

            &:nth-of-type(3) {
                transform: translateX(0%) translateY(0%);
                opacity: 1;

                .txt h2::before {
                    width: 4vw;
                }

                .pic img {
                    opacity: 1;
                }

                .open {
                    width: 100%;

                    span {
                        opacity: 1;
                        transform: translateX(20px);
                        transition: 0.5s 0.5s;
                    }

                    i {
                        opacity: 1;
                        margin-right: 30px;
                        transition: 0.5s 0.8s;
                    }
                }

            }

            &:nth-of-type(4) {
                transform: translateX(130%) translateY(-40%);
                opacity: 0.8;
            }


            &:nth-of-type(5) {
                transform: translateX(400%) translateY(-200%);
                opacity: 0;
            }

        }

        article.on {
            width: 100%;
            height: 100%;
            margin-top: 0;
            margin-left: 0;
            top: 0;
            left: 0;
            z-index: 2;
            transition-duration: 0.8s;
            transition-delay: 0.5s;

            .txt {
                width: 60%;
                height: 100%;
                padding: 5vw;
                transition: 0.5s 0.5s;

                h2 {
                    bottom: calc(100% - 5vw - 200px);
                    left: 5vw;
                    transition: 0.5s;
                }

                .desc {
                    opacity: 1;
                    top: 50%;
                    transition: 1s 1s;
                }
            }

            .pic {
                width: 40%;
                height: 100%;
                transition: 0.5s 0.5s;
            }

            .open {
                margin-top: 1000px;
                opacity: 0;
            }

            .close {
                top: 10vh;
                right: 10vw;
                opacity: 1;
                transition: 0.5s 1s;
                transition-timing-function: cubic-bezier(0.48, -0.67, 0.54, 1.68);
            }
        }

        article.hide {
            margin-top: -1000px;
            opacity: 0;
            transition-delay: 0s;
        }
    }

    nav {
        position: absolute;
        bottom: 10vh;
        right: 10vw;
        display: flex;
        gap: 50px;
        transition: 0.5s;

        &:hover {
            gap: 80px;
        }

        &::before {
            content: '';
            height: 150%;
            width: 1px;
            background-color: #fff;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translateY(-50%) rotate(-60deg);
        }


        p {
            width: 100px;
            height: 40px;
            position: relative;
            color: #fff;
            cursor: pointer;

            span {
                font: italic 12px/1 "arial";
                color: #fff;
                transition: 0.5s;
                display: inline-block;
            }

            &::before {
                content: '';
                position: absolute;
                width: 0%;
                height: 1px;
                background-color: #fff;
                top: 50%;
                opacity: 1;
                transition: 0.2s 0.2s;
            }

            &::after {
                content: '';
                position: absolute;
                width: 0px;
                height: 1px;
                background-color: #fff;
                top: 50%;
                transition: 0.2s 0s;
            }

            &.next {
                text-align: left;

                span {
                    transform: translateY(-5px);
                }

                &::before {
                    left: 0;
                }

                &::after {
                    transform-origin: right center;
                    transform: rotate(30deg);
                    right: 0;
                }
            }

            &.prev {
                text-align: right;

                span {
                    transform: translateY(20px);
                }

                &::before {
                    right: 0;
                }

                &::after {
                    transform-origin: left center;
                    transform: rotate(30deg);
                    left: 0;
                }
            }
        }

        p:hover {

            &.next,
            &.prev {
                &::before {
                    width: 100%;
                    transition: 0.2s;
                }

                &::after {
                    width: 40px;
                    transition: 0.2s 0.2s;
                }
            }
        }
    }
}